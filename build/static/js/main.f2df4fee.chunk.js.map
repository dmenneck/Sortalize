{"version":3,"sources":["components/AppContext.js","components/Slider.js","components/Sleep.js","functions/swap.js","functions/sleep.js","components/Selectionsort.js","components/Gnomesort.js","components/Bubblesort.js","components/InsertionSort.js","components/Shakersort.js","functions/startSorting.js","components/Starts.js","components/WhichAlgorithm.js","components/Toolbar.js","components/MobileTabs.js","components/MobileToolbar.js","components/SortingField.js","components/SortingAreaWrapper.js","components/ThemeSwitcher.js","components/Complexity.js","data/algorithms.js","components/Tabs.js","components/Information.js","components/Header.js","components/Intro.js","components/HoveredValue.js","components/IntroMessage.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","ContextProvider","props","useState","amountOfElements","setAmountOfElements","randomize","setRandomize","whichAlgorithm","setWhichAlgorithm","openInformation","setOpenInformation","switchChecked","setSwitchChecked","doneSorting","setDoneSorting","resetElements","setResetElements","sortingData","setSortingData","hoveredValue","setHoveredValue","startSortingMobile","setStartSortingMobile","Provider","value","value1","value2","value4","value5","value6","value7","value8","value9","value10","value11","children","useStyles","makeStyles","root","width","CSlider","slideComponent","classes","useContext","setAmountOfSwaps","valuetext","window","innerWidth","gsap","fromTo","x","opacity","duration","repeat","Slider","defaultValue","getAriaValueText","aria-labelledby","step","max","valueLabelDisplay","disabled","id","className","Tooltip","title","placement","onClick","rnd","arr","i","push","sort","Math","random","style","color","backgroundColor","cursor","display","Sleep","swapNodes","node1","node2","tmpX","getAttribute","setAttribute","speed","sleep","document","getElementsByClassName","item","lastChild","firstChild","innerHTML","Promise","resolve","setTimeout","Selectionsort","data","svg","a","swapCounter","length","min","j","fill","rect_i","rect_min","k","tmp","dataObj","swaps","Gnomesort","index","rect_iMinus1","temp","Bubblesort","rect_j","Insertionsort","Shakersort","isSorted","startSorting","getElementById","values","height","animVal","start","performance","now","sorted_data","end","time","console","log","sortingdata","Start","Sort","variant","WhichAlgorithm","name","onChange","e","target","fontSize","Toolbar","showComponent","setShowComponent","from","MobileTabs","component","sliderActive","activeNavigation","MobileToolbar","setValue","firstLoad","setFirstLoad","sameValues","useEffect","y","BottomNavigation","event","newValue","BottomNavigationAction","label","icon","CircularProgress","SortingField","fillArr","xmlns","innerHeight","transform","slice","map","rx","class","onMouseOver","onMouseLeave","SortingAreaWrapper","amountOfSwaps","wrapperVisible","setWrapperVisible","undefined","to","floor","ThemeSwitcher","handleChange","body","Complexity","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","algorithms","selectionsort","information","text","complexity","code","link","js","bubblesort","gnomesort","insertionsort","quicksort","TabPanel","other","role","hidden","Box","p","Typography","FullWidthTabs","theme","useTheme","Object","entries","filter","el","getCurrentAlgoData","AppBar","position","Tabs","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","href","Information","ClickAwayListener","onClickAway","Header","timeline","timer","ms","res","tl1","tl2","animateWords","sortalize","ease","delay","IntroSlide","FadeInLeft","trigger","idx","HoveredValue","IntroMessage","showData","setShowData","onMouseEnter","rotate","App","Intro","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f2df4fee.chunk.js","sourcesContent":["import react, { createContext, useState } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const ContextProvider = (props) => {\n  const [amountOfElements, setAmountOfElements] = useState(1);\n  const [randomize, setRandomize] = useState([]);\n  const [whichAlgorithm, setWhichAlgorithm] = useState(\"selectionsort\");\n  const [openInformation, setOpenInformation] = useState(false);\n  const [switchChecked, setSwitchChecked] = useState(false);\n  const [doneSorting, setDoneSorting] = useState(true);\n  const [resetElements, setResetElements] = useState(false);\n  const [sortingData, setSortingData] = useState();\n  const [hoveredValue, setHoveredValue] = useState();\n  const [startSortingMobile, setStartSortingMobile] = useState(false)\n\n  return (\n    <AppContext.Provider\n      value={{\n        value1: [amountOfElements, setAmountOfElements],\n        value2: [randomize, setRandomize],\n        value4: [whichAlgorithm, setWhichAlgorithm],\n        value5: [openInformation, setOpenInformation],\n        value6: [switchChecked, setSwitchChecked],\n        value7: [doneSorting, setDoneSorting],\n        value8 : [resetElements, setResetElements],\n        value9: [sortingData, setSortingData],\n        value10: [hoveredValue, setHoveredValue],\n        value11: [startSortingMobile, setStartSortingMobile],\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n","import react, { useEffect, useContext } from \"react\";\nimport { AppContext } from \"./AppContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport gsap from \"gsap/gsap-core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 150,\n  },\n});\n\nconst CSlider = () => {\n  const classes = useStyles();\n  const { value1, value2, value6, value7, value8, value9 } = useContext(AppContext);\n  const [amountOfElements, setAmountOfElements] = value1;\n  const [randomize, setRandomize] = value2;\n  const [switchChecked, setSwitchChecked] = value6;\n  const [doneSorting, setDoneSorting] = value7;\n  const [resetElements, setResetElements] = value8\n  const [amountOfSwaps, setAmountOfSwaps] = value9;\n\n  const valuetext = (value) => {\n    setAmountOfElements(value);\n    return `${value}`;\n  };\n\n  const randomizer = () => {\n    if (doneSorting) {\n      setAmountOfElements(1);\n\n      let arr = [];\n      let rnd = [];\n  \n      for (let i = 1; i < 101; i++) {\n        arr.push(i);\n      }\n  \n      rnd = arr.sort(() => Math.random() - 0.5);\n  \n      setRandomize(rnd);\n    } \n  };\n\n  const reset = () => {\n    setAmountOfSwaps()\n    setAmountOfElements(1);\n    setResetElements(true);\n  };\n\n  if (window.innerWidth >= 650) {\n    gsap.fromTo(\"#forward-icon\", {x: 0, opacity: 1}, {x: 130, opacity: 0, duration: 2.5, repeat: -1})\n  } \n\n  let slideComponent;\n  // cant simply change max-attribute for some reason..\n\n  if (window.innerWidth <= 250) {\n    slideComponent = <Slider\n        defaultValue={0}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        max={18}\n        valueLabelDisplay=\"auto\"\n        disabled={!doneSorting}\n      />\n  } else if (window.innerWidth > 250 && window.innerWidth <= 350) {\n    slideComponent = <Slider\n        defaultValue={0}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        max={22}\n        valueLabelDisplay=\"auto\"\n        disabled={!doneSorting}\n      />\n  } else if (window.innerWidth > 350 && window.innerWidth <= 451) {\n    slideComponent = <Slider\n      defaultValue={0}\n      getAriaValueText={valuetext}\n      aria-labelledby=\"discrete-slider-small-steps\"\n      step={1}\n      max={30}\n      valueLabelDisplay=\"auto\"\n      disabled={!doneSorting}\n    />\n  } else if (window.innerWidth > 450 && window.innerWidth <= 551) {\n    slideComponent = <Slider\n      defaultValue={0}\n      getAriaValueText={valuetext}\n      aria-labelledby=\"discrete-slider-small-steps\"\n      step={1}\n      max={40}\n      valueLabelDisplay=\"auto\"\n      disabled={!doneSorting}\n    />\n  } else if (window.innerWidth > 551 && window.innerWidth <= 880) {\n      slideComponent = <Slider\n      defaultValue={0}\n      getAriaValueText={valuetext}\n      aria-labelledby=\"discrete-slider-small-steps\"\n      step={1}\n      max={54}\n      valueLabelDisplay=\"auto\"\n      disabled={!doneSorting}\n    />\n  }  else if (window.innerWidth > 881 && window.innerWidth <= 1100) {\n    slideComponent = <Slider\n    defaultValue={0}\n    getAriaValueText={valuetext}\n    aria-labelledby=\"discrete-slider-small-steps\"\n    step={1}\n    max={80}\n    valueLabelDisplay=\"auto\"\n    disabled={!doneSorting}\n  />\n  } else {\n    slideComponent = <Slider\n      defaultValue={0}\n      getAriaValueText={valuetext}\n      aria-labelledby=\"discrete-slider-small-steps\"\n      step={1}\n      max={100}\n      valueLabelDisplay=\"auto\"\n      disabled={!doneSorting}\n    />\n  }\n  \n  return (\n    <div id=\"slider-wrapper\" className={classes.root}>\n      <Tooltip title={doneSorting ? \"watch what happens...\" : \"still sorting...\"} placement=\"top\">\n        <button\n          id=\"randomize-btn\"\n          className=\"comic-font\"\n          onClick={randomizer}\n          style={{\n            color: switchChecked ? \"black\" : \"white\",\n            backgroundColor: switchChecked ? \"white\" : \"black\",\n            cursor: doneSorting ? \"pointer\" : \"auto\"\n          }}\n        >\n          Randomi<span className=\"z\">z</span>e\n        </button>\n      </Tooltip>\n      <Tooltip  title={doneSorting ? \"Return\" : \"still sorting...\"} placement=\"top\">\n        <SettingsBackupRestoreIcon\n          className=\"comic-font\"\n          id=\"randomize-return\"\n          onClick={doneSorting ? reset : null}\n        />\n      </Tooltip>\n      <ArrowForwardIosIcon id=\"forward-icon\" style={{display: amountOfElements == 0 && window.innerWidth >= 770 ? \"block\" : \"none\"}}/>\n      { slideComponent }\n    </div>\n  );\n};\n\nexport default CSlider;\n","import react, { useState, useContext } from \"react\";\nimport { AppContext } from \"./AppContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 150,\n  },\n});\n\nconst Sleep = () => {\n  const { value4 } = useContext(AppContext);\n  const [whichAlgorithm, setWhichAlgorithm] = value4;\n  const classes = useStyles();\n\n  return (\n    <div id=\"slider-wrapper\" className={classes.root}>\n      <div className=\"slidecontainer slidecontainer-1\">\n        <Slider\n          defaultValue={0}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={1}\n          max={10}\n          valueLabelDisplay=\"auto\"\n          id=\"slider-sleep\"\n          disabled={whichAlgorithm == \"quicksort\" ? true : false}\n        />\n        <Tooltip title=\"Speed\" placement=\"top\" id=\"fast-forward\" style={{display: window.innerWidth < 770 ? \"none\" : \"block\"}}>\n          <FastForwardIcon id=\"fast-forward\"/>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Sleep;\n","export const swapNodes = (node1, node2) => {\n  let tmpX = node1.getAttribute(\"x\");\n\n  node1.setAttribute(\"x\", node2.getAttribute(\"x\"));\n  node2.setAttribute(\"x\", tmpX);\n};\n","export function Sleep(whichAlgorithm) {\n\n  let speed;\n\n  // check if mobile or desktop sleep slider\n  if ( window.innerWidth < 770 ) {\n    if ( document.getElementsByClassName(\"slidecontainer-1\").item(1) == null ) {\n      speed = 0;\n    } else {\n      speed = document.getElementsByClassName(\"slidecontainer-1\").item(1).children[0].lastChild.firstChild.firstChild.firstChild.innerHTML;\n    }\n  } else {\n    speed = document\n  .getElementsByClassName(\"MuiSlider-root\")\n  .item(1)\n  .children.item(2).value;\n  }\n\n  // get \"reversed\" timeout value\n  let sleep;\n  let arr;\n  if (whichAlgorithm == \"quicksort\") {\n    sleep = 2000;\n  } else {\n    arr = [200, 180, 160, 140, 120, 100, 80, 60, 40, 20, 0];\n    sleep = arr[speed];\n  }\n  \n  return new Promise((resolve) => setTimeout(resolve, sleep));\n}\n","import react, { useEffect } from \"react\";\nimport { swapNodes } from \"../functions/swap\";\nimport { Sleep } from \"../functions/sleep\";\n\nexport const Selectionsort = async (data, svg) => {\n  let swapCounter = 0;\n\n  for (let i = 0; i < data.length; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n\n    for (let j = i + 1; j < data.length; j++) {\n      svg[j].style.fill = \"grey\";\n      svg[min].style.fill = \"red\";\n\n      if (data[min] > data[j]) {\n        svg[min].style.fill = \"#ff8c00\";\n        min = j;\n        svg[min].style.fill = \"grey\";\n      }\n\n      await Sleep(); // pause loop\n\n      svg[j].style.fill = \"#ff8c00\";\n    }\n\n    if (min != i) {\n      // Swapping the elements\n      // get index of min and i in html collection (svg)\n      let rect_i, rect_min;\n      for (let k = 0; k < svg.length; k++) {\n        if (data[i] == svg[k].getAttribute(\"height\")) {\n          rect_i = k;\n        }\n\n        if (data[min] == svg[k].getAttribute(\"height\")) {\n          rect_min = k;\n        }\n      }\n\n      swapNodes(svg[rect_i], svg[rect_min]);\n      swapCounter++;\n\n      let tmp = data[i];\n\n      data[i] = data[min];\n\n      data[min] = tmp;\n    }\n\n    // reset color of current i\n    svg[i].style.fill = \"#ff8c00\";\n  }\n\n  let dataObj = {\n    data: data,\n    swaps: swapCounter\n  }\n\n  return dataObj;\n};\n","import { Sleep } from \"../functions/sleep\";\nimport { swapNodes } from \"../functions/swap\";\n\nexport const Gnomesort = async (data, svg) => {\n  // sleep value\n\n  let index = 0;\n  let swapCounter = 0;\n\n  while (index < data.length) {\n    svg[index].style.fill = \"#ff8c00\";\n\n    if (index == 0) index++;\n\n    if (data[index] >= data[index - 1]) {\n      index++;\n    } else {\n      await Sleep(); // pause loop\n\n      // swap nodes\n      let rect_i, rect_iMinus1, temp;\n      // loop over svgs to get the svgs with the values who get swapped\n      for (let k = 0; k < svg.length; k++) {\n        if (data[index] == svg[k].getAttribute(\"height\")) {\n          rect_i = k;\n        }\n\n        if (data[index - 1] == svg[k].getAttribute(\"height\")) {\n          rect_iMinus1 = k;\n        }\n      }\n\n      svg[rect_iMinus1].style.fill = \"#ff8c00\";\n      svg[rect_i].style.fill = \"red\";\n\n      swapNodes(svg[rect_i], svg[rect_iMinus1]);\n\n      temp = data[index];\n      data[index] = data[index - 1];\n      data[index - 1] = temp;\n      index--;\n\n      swapCounter++;\n    }\n  }\n\n  let dataObj = {\n    data: data,\n    swaps: swapCounter\n  }\n\n  return dataObj;\n};\n","import { Sleep } from \"../functions/sleep\";\nimport { swapNodes } from \"../functions/swap\";\n\nexport const Bubblesort = async (data, svg) => {\n  let rect_i, rect_j, swapCounter = 0;\n  \n  for (let i = 0; i < data.length; i++) {  \n    svg[i].style.fill = \"red\";\n\n\n    for (let j = 0; j < data.length; j++) {\n      svg[i].style.fill = \"#ff8c00\";\n      svg[j].style.fill = \"#ff8c00\";\n\n      await Sleep(); // pause loop\n\n      // Comparing and swapping the elements\n      if (data[j] > data[j + 1]) {        \n        // swap nodes\n      \n        // loop over svgs to get the svgs with the values who get swapped\n        for (let k = 0; k < svg.length; k++) {\n          if (data[j] == svg[k].getAttribute(\"height\")) {\n            rect_i = k;\n          }\n\n          if (data[j + 1] == svg[k].getAttribute(\"height\")) {\n            rect_j = k;\n          }\n        }\n\n        svg[rect_j].style.fill = \"#ff8c00\";\n        svg[rect_i].style.fill = \"red\";\n\n        \n        swapNodes(svg[rect_i], svg[rect_j]);\n        swapCounter++;\n  \n        let tmp = data[j];\n        data[j] = data[j + 1];\n        data[j + 1] = tmp;\n      }\n\n      // loop over svgs to get the svgs with the values who get swapped\n      for (let k = 0; k < svg.length; k++) {\n        if (data[j] == svg[k].getAttribute(\"height\")) {\n          rect_i = k;\n        }\n      }\n\n      svg[rect_i].style.fill = \"#ff8c00\";\n    }\n  }\n\n  let dataObj = {\n    data: data,\n    swaps: swapCounter\n  }\n\n  return dataObj;\n};","import { Sleep } from \"../functions/sleep\";\nimport { swapNodes } from \"../functions/swap\";\n\nexport const Insertionsort = async (data, svg) => {\n\n    let rect_i, rect_j, swapCounter = 0;\n    let j;\n   \n    for (let i = 1; i < data.length; i++) {\n        j = i;\n\n        while (j > 0 && data[j] < data[j - 1]) {\n\n            await Sleep();\n\n            // loop over svgs to get the svgs with the values who get swapped\n            for (let k = 0; k < svg.length; k++) {\n                if (data[j] == svg[k].getAttribute(\"height\")) {\n                    rect_i = k;\n                }\n    \n                if (data[j - 1] == svg[k].getAttribute(\"height\")) {\n                    rect_j = k;\n                }\n            }\n\n            svg[rect_j].style.fill = \"#ff8c00\";\n            svg[rect_i].style.fill = \"red\";\n    \n            swapNodes(svg[rect_i], svg[rect_j]);\n            swapCounter++;\n            \n            let temp = data[j];\n            data[j] = data[j - 1];\n            data[j - 1] = temp;\n\n            j--;\n        }\n\n      // loop over svgs to get the svgs with the values who get swapped\n      for (let k = 0; k < svg.length; k++) {\n        if (data[j] == svg[k].getAttribute(\"height\")) {\n          rect_i = k;\n        }\n      }\n\n      svg[rect_i].style.fill = \"#ff8c00\";\n\n    }\n    \n    let dataObj = {\n        data: data,\n        swaps: swapCounter\n      }\n    \n    return dataObj;\n};\n\n// #ff8c00","import { Sleep } from \"../functions/sleep\";\nimport { swapNodes } from \"../functions/swap\";\n\nexport const Shakersort = async (data, svg) => {\n\n    let rect_i, rect_j, swapCounter = 0;\n    let isSorted = true;\n\n    while (isSorted){\n        for (let i = 0; i < data.length - 1;i++){\n            await Sleep();\n                if (data[i] > data[i + 1])\n                 {\n                    // loop over svgs to get the svgs with the values who get swapped\n                    for (let k = 0; k < svg.length; k++) {\n                        if (data[i] == svg[k].getAttribute(\"height\")) {\n                         rect_i = k;\n                        }\n            \n                        if (data[i + 1] == svg[k].getAttribute(\"height\")) {\n                         rect_j = k;\n                        }\n                    }\n                    \n                    svg[rect_i].style.fill = \"red\";\n\n\n                    swapNodes(svg[rect_i], svg[rect_j]);\n                    swapCounter++;\n\n                    let temp = data[i];\n                    data[i] = data[i + 1];\n                    data[i+1] = temp;\n                    isSorted = true;\n                 }\n\n                 // loop over svgs to get the svgs with the values who get swapped\n                for (let k = 0; k < svg.length; k++) {\n                    if (data[i] == svg[k].getAttribute(\"height\")) {\n                        rect_i = k;\n                    }\n                }\n                \n                svg[rect_i].style.fill = \"#ff8c00\";\n        }\n     \n        if (!isSorted) {\n            break;\n        }\n            \n        isSorted = false;\n     \n        for (let j = data.length - 1; j > 0; j--){\n            await Sleep();\n                if (data[j-1] > data[j])\n                 {\n                     \n                    // loop over svgs to get the svgs with the values who get swapped\n                    for (let k = 0; k < svg.length; k++) {\n                        if (data[j] == svg[k].getAttribute(\"height\")) {\n                        rect_i = k;\n                        }\n            \n                        if (data[j - 1] == svg[k].getAttribute(\"height\")) {\n                        rect_j = k;\n                        }\n                    }\n\n                    svg[rect_i].style.fill = \"red\";\n                    \n                    swapNodes(svg[rect_i], svg[rect_j]);\n                    swapCounter++;\n\n                    let temp = data[j];\n                    data[j] = data[j - 1];\n                    data[j - 1] = temp;\n                    isSorted = true;\n                 }\n\n                // loop over svgs to get the svgs with the values who get swapped\n                for (let k = 0; k < svg.length; k++) {\n                    if (data[j] == svg[k].getAttribute(\"height\")) {\n                        rect_j = k;\n                    }\n                }\n                \n                svg[rect_j].style.fill = \"#ff8c00\";\n        }\n    }\n\n    let dataObj = {\n        data: data,\n        swaps: swapCounter\n    }\n\n    return dataObj;\n};","import { Selectionsort } from \"../components/Selectionsort\";\nimport { Gnomesort } from \"../components/Gnomesort.js\";\nimport { Bubblesort } from \"../components/Bubblesort.js\";\nimport { Insertionsort } from \"../components/InsertionSort.js\";\nimport { Shakersort } from \"../components/Shakersort.js\";\n\nexport const startSorting = async (whichAlgorithm) => {\n\n    let svg = document.getElementById(\"svg\").children;\n\n    let values = [];\n    for (let i = 0; i < svg.length; i++) {\n      values.push(svg[i].height.animVal.value);\n    }\n\n    // check which algorithm to run\n    let time, start, end, sorted_data;\n    switch (whichAlgorithm) {\n      case \"selectionsort\":\n        // get execution time\n        start = performance.now()\n        sorted_data = await Selectionsort(values, svg);\n        end = performance.now()\n        time = end - start;\n        break;\n      case \"gnomesort\":\n        start = performance.now()\n        sorted_data = await Gnomesort(values, svg);\n        end = performance.now()\n        time = end - start;\n        break;\n      case \"bubblesort\":\n        start = performance.now()\n        sorted_data = await Bubblesort(values, svg);\n        end = performance.now()\n        time = end - start;\n        break;\n      case \"insertionsort\":\n        start = performance.now()\n        sorted_data = await Insertionsort(values, svg);\n        end = performance.now()\n        time = end - start;\n        break;\n      case \"shakersort\":\n        start = performance.now()\n        sorted_data = await Shakersort(values, svg);\n        console.log(sorted_data)\n        end = performance.now()\n        time = end - start;\n        break;\n    }\n\n    let sortingdata = {\n      swaps: sorted_data.swaps,\n      time: time\n    }\n\n    return sortingdata;\n};","import react, { useContext, useState } from \"react\";\nimport { AppContext } from \"./AppContext\";\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport {startSorting} from \"../functions/startSorting\"\n\nconst Start = () => {\n  const { value1,value4, value7, value9, value11 } = useContext(AppContext);\n  \n  const [amountOfElements, setAmountOfElements] = value1;\n  const [whichAlgorithm, setWhichAlgorithm] = value4;\n  const [doneSorting, setDoneSorting] = value7;\n  const [sortingData, setSortingData] = value9;\n  const [startSortingMobile, setStartSortingMobile] = value11;\n\n  const Sort = async () => {\n    setAmountOfElements(1);\n\n    setDoneSorting(false);\n    let data = await startSorting(whichAlgorithm)\n    setSortingData(data)\n    setDoneSorting(true);\n    setStartSortingMobile(false);\n  }\n\n  return (\n    <div>\n      <Tooltip title=\"Start Sorting\" placement=\"top\">\n        <button variant=\"outlined\" onClick={doneSorting ? Sort : null} className=\"sort-btn\">\n          <PlayArrowIcon style={{fill: \"white\"}}/>\n        </button>\n      </Tooltip>\n  </div>\n  ) \n};\n\nexport default Start;\n","import React, { useState, useContext, forwardRef } from \"react\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { AppContext } from \"./AppContext\";\n\nconst WhichAlgorithm = () => {\n  const { value4, value5, value6 } = useContext(AppContext);\n  const [whichAlgorithm, setWhichAlgorithm] = value4;\n  const [openInformation, setOpenInformation] = value5;\n  const [switchChecked, setSwitchChecked] = value6;\n\n  const changeAlgo = (e) => {\n    setWhichAlgorithm(e.target.value);\n  };\n\n  const handleClickOpen = () => {\n    openInformation ? setOpenInformation(false) : setOpenInformation(true);\n  };\n\n  return (\n    <div id=\"which-algo-wrapper\">\n      <Tooltip title=\"Select algorithm\" placement=\"top\">  \n        <select\n          name=\"algorithm\"\n          id=\"algorithm-select\"\n          onChange={changeAlgo}\n          value={whichAlgorithm}\n        >\n          <option value=\"selectionsort\">Selectionsort</option>\n          <option value=\"bubblesort\">Bubblesort</option>\n          <option value=\"gnomesort\">Gnomesort</option>\n          <option value=\"insertionsort\">Insertionsort</option>\n          <option value=\"shakersort\">Shakersort</option>\n        </select>\n      </Tooltip>\n      <Tooltip title=\"Information\" placement=\"top\">\n        <InfoIcon onClick={handleClickOpen} id=\"info-icon\" style={{ fontSize: 30 }}/>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default WhichAlgorithm;\n","import react, { useContext, useState } from \"react\";\nimport Slider from \"../components/Slider\";\nimport Sleep from \"../components/Sleep\";\nimport Start from \"../components/Starts\";\nimport WhichAlgorithm from \"../components/WhichAlgorithm\";\nimport { AppContext } from \"./AppContext\";\nimport { Reveal, Tween } from 'react-gsap';\n\nconst Toolbar = () => {\n  const { value6 } = useContext(AppContext);\n  const [switchChecked, setSwitchChecked] = value6;\n  const [showComponent, setShowComponent] = useState(false)\n\n\n  setTimeout(() => {\n    setShowComponent(true)\n  }, 3000)\n\n  if (showComponent) {\n    return (\n      <Reveal>\n        <Tween from={{ opacity: 0 }} duration={2}>\n          <div\n              id=\"toolbar\"\n              style={{ backgroundColor: switchChecked ? \"#022249\" : \"\"}}\n            >\n              <Slider />\n              <WhichAlgorithm />\n              <Sleep />\n              <Start />\n          </div>\n        </Tween>\n      </Reveal>\n      );\n  } else {\n    return (\n      null\n    )\n  }\n};\n\nexport default Toolbar;\n\n\n","import react, {useContext, useEffect} from \"react\"\nimport gsap from \"gsap\"\nimport Slider from \"../components/Slider\";\nimport Sleep from \"../components/Sleep\";\nimport WhichAlgorithm from \"../components/WhichAlgorithm\";\nimport { AppContext } from \"./AppContext\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\n\nconst MobileTabs = ({activeNavigation}) => {\n    const {value1, value4, value6} = useContext(AppContext);\n    const [amountOfElements, setAmountOfElements] = value1;\n    const [whichAlgorithm, setWhichAlgorithm] = value4;\n\n    gsap.fromTo(\"#forward-icon-mobile\", {x: 26, opacity: 1}, {x: 340, opacity: 0, duration: 2.5, repeat: -1})\n    gsap.fromTo(\"#fast-forward-mobile\", {x: 26, opacity: 1}, {x: 240, opacity: 0, duration: 2.5, repeat: -1})\n\n    let component;\n    let sliderActive;\n\n    if (activeNavigation == \"slider\") {\n        sliderActive = true;\n    } else if (activeNavigation == \"speed\") {\n        sliderActive = false;\n        component = <Sleep />;\n    } else if (activeNavigation == \"algorithms\") {\n        sliderActive = false;\n        component = <WhichAlgorithm />;\n    }  else if (activeNavigation == \"start\") {\n        sliderActive = false;\n        component = <Sleep />;\n    }\n    \n    let slide;\n    if (sliderActive) {\n        window.innerWidth < 650 ? slide =  <Slider /> : slide = null;\n    }\n   \n    return (\n        <div className=\"mobile-tabs-wrapper\" style={{display: activeNavigation != \"\" && window.innerWidth < 770  ? \"block\" : \"none\"}}>\n            {component}\n\n            <div style={{display: sliderActive ? \"block\" : \"none\"}}>\n                {window.innerWidth < 770 ? slide =  <Slider style={{display: \"none\"}} /> : null}\n            </div>\n            \n            <ArrowForwardIosIcon id=\"forward-icon-mobile\" style={{display: activeNavigation == \"slider\" && amountOfElements == 0 ? \"block\" : \"none\" }}/>\n            <FastForwardIcon id=\"fast-forward-mobile\" style={{display: activeNavigation == \"start\" ? \"block\" : \"none\"}}/>\n        </div>\n    )\n}\n\nexport default MobileTabs;\n\n","import react, { useContext, useState, useEffect } from \"react\";\nimport gsap from \"gsap\"\nimport MobileTabs from \"../components/MobileTabs\"\nimport { AppContext } from \"./AppContext\";\nimport { Reveal, Tween } from 'react-gsap';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport {startSorting} from \"../functions/startSorting\"\n\nconst MobileToolbar = () => {\n  const { value4, value6, value7, value9, value11 } = useContext(AppContext);\n  const [whichAlgorithm, setWhichAlgorithm] = value4;\n  const [switchChecked, setSwitchChecked] = value6;\n  const [doneSorting, setDoneSorting] = value7;\n  const [sortingData, setSortingData] = value9;\n  const [startSortingMobile, setStartSortingMobile] = value11;\n  const [value, setValue] = useState(\"\");\n  const [showComponent, setShowComponent] = useState(false)\n  const [firstLoad, setFirstLoad] = useState(false)\n\n\n  setTimeout(() => {\n    setShowComponent(true)\n  }, 3000)\n\n  const Sort = async () => {\n    setDoneSorting(false);\n    let data = await startSorting(whichAlgorithm)\n    setSortingData(data)\n    setDoneSorting(true);\n    setStartSortingMobile(false);\n  }\n\n  // toggle mobile tab bars\n  let sameValues\n  const handleChange = (event, newValue) => {\n    setFirstLoad(true)\n\n    // start sorting\n    if (newValue == value) {\n      // check if same tab was clicked twice\n      if (sameValues) {\n        gsap.fromTo(\".mobile-tabs-wrapper\", {y: 0}, {y: -56})\n        sameValues = false;\n      } else {\n        gsap.fromTo(\".mobile-tabs-wrapper\", {y: -56}, {y: 40} )\n        sameValues = true;\n      }\n    } else {\n      gsap.fromTo(\".mobile-tabs-wrapper\", {y: 0}, {y: -56})\n      sameValues = false\n      setValue(newValue);\n    }\n  };\n\n  // execute when doneSorting bool changes\n  useEffect(() => {\n    // firstLoad: to hide slider on mount\n    if (doneSorting && firstLoad) {\n      gsap.fromTo(\".mobile-tabs-wrapper\", {y: 0}, {y: -56, duration: 0.8})\n      sameValues = false\n      setValue(\"slider\");\n    } \n  }, [doneSorting])\n\n  if (showComponent) {\n    return (\n        <>\n            <Reveal>\n                <Tween from={{ opacity: 0 }} duration={2}>\n                <div\n                    id=\"mobile-toolbar\"\n                    > \n                    <BottomNavigation  value={value} onChange={handleChange}>\n                        <BottomNavigationAction label=\"Slider\" value=\"slider\" icon={<EqualizerIcon />} />\n                        <BottomNavigationAction label=\"Algorithms\" value=\"algorithms\" icon={<MoreHorizIcon />} />\n                        <BottomNavigationAction label={doneSorting ? \"Sorted!\" : \"Sorting...\"} value=\"start\" icon={doneSorting ? <PlayArrowIcon /> : <CircularProgress />} onClick={doneSorting ? Sort : null} />\n                    </BottomNavigation>\n                </div>\n                </Tween>\n            </Reveal>\n            \n            <MobileTabs activeNavigation={value}/>\n        </>\n      );\n  } else {\n    return (\n      null\n    )\n  }\n};\n\nexport default MobileToolbar;\n\n/*\n const handleChange = (event, newValue) => {\n    // start sorting\n    if (newValue == value) {\n      // check if same tab was clicked twice\n      if (sameValues) {\n        gsap.fromTo(\".mobile-tabs-wrapper\", {y: 200}, {y: -56})\n        sameValues = false;\n      } else {\n        gsap.fromTo(\".mobile-tabs-wrapper\", {y: -56}, {y: 100}, {duration: 1})\n        sameValues = true;\n      }\n    } else {\n      gsap.fromTo(\".mobile-tabs-wrapper\", {y: 200}, {y: -56})\n      sameValues = false\n      setValue(newValue);\n    }\n  };\n\n\n*/\n\n\n","import react, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"./AppContext\";\n\nconst SortingField = () => {\n  const { value1, value2, value8, value10 } = useContext(AppContext);\n  const [amountOfElements, setAmountOfElements] = value1;\n  const [randomize, setRandomize] = value2;\n  const [resetElements, setResetElements] = value8\n  const [hoveredValue, setHoveredValue] = value10;\n\n\n  const fillArr = () => {\n    let arr = [];\n    for (let i = 1; i < 101; i++) {\n      arr.push(i);\n    }\n    setRandomize(arr);\n  }\n\n  // initial fill on page load\n  useEffect(() => {\n    fillArr()\n  }, []);\n\n  if (resetElements) {\n    // reset values in arr\n    setRandomize([])\n    // re-fill array with sorted number 1-100\n    fillArr()\n    setResetElements(false)\n  }\n\n\n  return (\n    <div className=\"svg\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height={(window.innerHeight / 2) - (window.innerHeight / 14) + 60}\n        width={10 * amountOfElements} \n        transform=\"scale(1 -1)\"\n        id=\"svg\"\n      >\n        {randomize.slice(0, amountOfElements).map((i, index) => {\n          return (\n            <rect x={index * 10} width=\"9\" height={i * 3} rx=\"2\" class=\"rects\"  onMouseOver={(() => setHoveredValue(i))} onMouseLeave={(() => setHoveredValue())} />\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n\nexport default SortingField;\n","import React, {useState, useContext} from \"react\";\nimport gsap from \"gsap\"\nimport SortingField from \"../components/SortingField\";\nimport { AppContext } from \"./AppContext\";\n\nconst SortingAreaWrapper = () => {\n  const { value1,value6, value7, value9, value5 } = useContext(AppContext)\n  const [amountOfElements, setAmountOfElements] = value1;\n  const [wrapperVisible, setWrapperVisible] = useState(false)\n  const [openInformation, setOpenInformation] = value5;\n  const [switchChecked, setSwitchChecked] = value6;\n  const [doneSorting, setDoneSorting] = value7;\n  const [sortingData, setSortingData] = value9;\n\n  setTimeout(() => {\n    setWrapperVisible(true)\n  }, 3000)\n\n  if (sortingData != undefined) {\n    gsap.to(\".swaps\", {opacity: 1, duration: .5})\n  } else {\n    gsap.to(\".swaps\", {opacity: 0, duration: .5})\n  }\n\n  let amountOfSwaps;\n  let time;\n  if (sortingData == undefined) {\n    amountOfSwaps = 0\n    time = 0\n  } else {\n    amountOfSwaps = sortingData.swaps\n    time = sortingData.time\n  }\n\n  if (wrapperVisible) {\n    return (\n      <div id=\"sorting-area-wrapper\" style={{display: openInformation ? \"none\" : \"block\"}}>\n        <div id=\"sorting-finished-informations\" style={{display: amountOfSwaps == 0 || !doneSorting ? \"none\" : \"block\"}}>\n          <p className=\"swaps\" style={{opacity: 0, color: switchChecked ? \"rgb(2, 34, 73)\" : \"white\"}}>swaps: {amountOfSwaps} </p>\n          <p className=\"swaps\" style={{opacity: 0, color: switchChecked ? \"rgb(2, 34, 73)\" : \"white\"}}>time: {Math.floor((time / 1000) % 60)}s</p>\n        </div>\n        <SortingField />\n      </div>\n    );\n  } else {\n    return null\n  }\n};\n\nexport default SortingAreaWrapper;\n","import { useState, useContext } from \"react\";\nimport { AppContext } from \"../components/AppContext\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport BrightnessLowIcon from \"@material-ui/icons/BrightnessLow\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst ThemeSwitcher = () => {\n  const { value6 } = useContext(AppContext);\n  const [switchChecked, setSwitchChecked] = value6;\n\n  const handleChange = () => {\n    switchChecked ? setSwitchChecked(false) : setSwitchChecked(true);\n\n    switchChecked\n      ? (document.body.style.backgroundColor = \"#1F1F1F\")\n      : (document.body.style.backgroundColor = \"#C7EEF5\");\n  };\n\n  return (\n    <div id=\"theme_switcher\">\n      {!switchChecked ? (\n        <Tooltip title=\"Switch to Light Mode\" placement=\"top\">\n          <Brightness7Icon onClick={handleChange} style={{ fill: \"white\" }} />\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Switch to Dark Mode\" placement=\"top\">\n          <BrightnessLowIcon onClick={handleChange} style={{ fill: \"black\" }} />\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n\n","import react from \"react\"\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst Complexity = ({data}) => {\n\n    return (\n        <TableContainer component={Paper}>\n            <Table  aria-label=\"simple table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\">Best case</TableCell>\n                    <TableCell align=\"center\">Average Case</TableCell>\n                    <TableCell align=\"center\">Worst Case</TableCell>\n                    <TableCell align=\"center\">Space</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow >\n                        {data.map((row) => (\n                            <TableCell align=\"center\">{row}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default Complexity;","const selection_sort = \n`for (let i = 0; i < data.length; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < data.length; j++) {\n      if (data[min] > data[j]) {\n        min = j;\n    }\n\n    if (min != i) {\n      let tmp = data[i];\n      data[i] = data[min];\n      data[min] = tmp;\n    }\n  }\n  return data;\n}\n`\n\nconst bubble_sort = \n`for (let i = 0; i < data.length; i++) {  \n   for (let j = 0; j < data.length; j++) {\n \n    if (data[j] > data[j + 1]) {\n\n      let tmp = data[j];\n      data[j] = data[j + 1];\n      data[j + 1] = tmp;\n    }\n  }\n\n  return data;\n}\n`\n\nconst gnome_sort = \n`let index = 0;\nwhile (index < data.length) {\n  if (index == 0) index++;\n  if (data[index] >= data[index - 1]) {\n    index++;\n  } else {\n    temp = data[index];\n    data[index] = data[index - 1];\n    data[index - 1] = temp;\n    index--;\n  }\n}\n\nreturn data;\n`\n\nconst quick_sort = \n`const swap = (items, leftIndex, rightIndex) => {\n  let temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n}\n\nconst partition = (items, left, right) => {\n\n  let pivot = items[Math.floor((right + left) / 2)]; //middle element\n  let i = left; //left pointer\n  let j = right; //right pointer\n\n  while (i <= j) {\n      while (items[i] < pivot) {\n          i++;\n      }\n\n      while (items[j] > pivot) {\n          j--;\n      }\n\n      if (i <= j) {\n          swap(items, i, j); //swapping two elements\n\n          i++;\n          j--;\n      }\n  }\n  return i;\n}\n\nconst quickSort = async (items, left, right) => {\n  await Sleep();\n\n  var index;\n  if (items.length > 1) {\n      index = partition(items, left, right); //index returned from partition\n      if (left < index - 1) { //more elements on the left side of the pivot\n          quickSort(items, left, index - 1);\n      }\n      if (index < right) { //more elements on the right side of the pivot\n          quickSort(items, index, right);\n      }\n  }\n  return items;\n}\n\nlet sortedArray = quickSort(data, 0, data.length - 1);\n`\n\nconst insertion_sort = \n`for (let i = 1; i < data.length; i++) {\n  j = i;\n\n  while (j > 0 && data[j] < data[j - 1]) {\n      \n      let temp = data[j];\n      data[j] = data[j - 1];\n      data[j - 1] = temp;\n\n      j--;\n  }\n\n  return data;\n}\n`\n\nconst algorithms = {\n    selectionsort: {\n      information: {\n        name: \"Selection Sort\",\n        text: `Selection sort is a simple sorting algorithm. This sorting algorithm is an in-place comparison-based algorithm in which the list is divided into two parts, the sorted part at the left end and the unsorted part at the right end. Initially, the sorted part is empty and the unsorted part is the entire list.\n                The smallest element is selected from the unsorted array and swapped with the leftmost element, and that element becomes a part of the sorted array. This process continues moving unsorted array boundary by one element to the right.`\n      },\n      complexity: {\n        text: [\"O(n2)\", \"O(n2)\", \"O(n2)\", \"?\"]\n      },\n      code: {\n        link: \"https://github.com/dmenneck/Sortalize/blob/master/src/components/Selectionsort.js\",\n        js: selection_sort,\n      }\n    },\n    bubblesort: {\n      information: {\n        name: \"Bubble Sort\",\n        text: `Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.`\n      },\n      complexity: {\n        text: [\"O(n)\", \"O(n2)\", \"O(n2)\", \"?\"]\n      },\n      code: {\n        link: \"https://github.com/dmenneck/Sortalize/blob/master/src/components/Selectionsort.js\",\n        js: bubble_sort,\n      }\n    },\n    gnomesort: {\n      information: {\n        name: \"Gnome Sort\",\n        text: `Gnome sort is a sorting algorithm which is similar to Insertion sort, except that moving an element to its proper place is accomplished by a series of swaps, as in Bubble Sort.`\n      },\n      complexity: {\n        text: [\"O(n)\", \"O(n2)\", \"O(n2)\", \"?\"]\n      },\n      code: {\n        link: \"https://github.com/dmenneck/Sortalize/blob/master/src/components/Selectionsort.js\",\n        js: gnome_sort,\n      }\n    },\n    insertionsort: {\n      information: {\n        name: \"Insertion Sort\",\n        text: `Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array is virtually split into a sorted and an unsorted part. Values from the unsorted part are picked and placed at the correct position in the sorted part.`\n      },\n      complexity: {\n        text: [\"O(n)\", \"O(n2)\", \"O(n2)\", \"?\"]\n      },\n      code: {\n        link: \"https://github.com/dmenneck/Sortalize/blob/master/src/components/Selectionsort.js\",\n        js: insertion_sort,\n      }\n    },\n    quicksort: {\n      information: {\n        name: \"Quick Sort\",\n        text: `Quick Sort is a sorting algorithm, which is commonly used in computer science. Quick Sort is a divide and conquer algorithm. It creates two empty arrays to hold elements less than the pivot value and elements greater than the pivot value, and then recursively sort the sub arrays. There are two basic operations in the algorithm, swapping items in place and partitioning a section of the array.`\n      },\n      complexity: {\n        text: [\"O(n log n)\", \"O(n log n)\", \"O(n2)\", \"?\"]\n      },\n      code: {\n        link: \"https://github.com/dmenneck/Sortalize/blob/master/src/components/Selectionsort.js\",\n        js: quick_sort,\n      }\n    }\n  }\n\nexport const getCurrentAlgoData = (whichAlgorithm) => {\n    let asArray = Object.entries(algorithms)\n  \n    let data = asArray.map((i) => {\n      if (i[0] == whichAlgorithm) return i;\n    })\n  \n    let filtered = data.filter(function (el) {\n      return el != null;\n    });\n    \n    return filtered[0][1];\n  }\n  \n\n","import React, {useState, useContext} from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppContext } from \"./AppContext\";\nimport Highlight from 'react-highlight'\nimport Complexity from \"../components/Complexity\"\nimport {getCurrentAlgoData } from \"../data/algorithms\"\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default function FullWidthTabs() {\n  const {value4, value5} = useContext(AppContext)\n  const [whichAlgorithm, setWhichAlgorithm] = value4\n  const [openInformation, setOpenInformation] = value5\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  let data;\n  if(openInformation) {\n    data = getCurrentAlgoData(whichAlgorithm)\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Information\" />\n          <Tab label=\"Time complexity\" />\n          <Tab label=\"Code\" />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <h1 id=\"info-algo-name\">{data.information.name}</h1>\n          <span>{data.information.text}</span>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Complexity data={data.complexity.text}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n        <div id=\"code_wrapper\">\n          <Highlight className='javascript'>\n            {data.code.js}\n          </Highlight>\n\n        </div>\n          <span>...see full code on </span>\n          <a href={data.code.link} target=\"_blank\" style={{color: \"white\"}}>github</a>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import { AppContext } from \"../components/AppContext\";\nimport { Controls, PlayState, Tween } from \"react-gsap\";\nimport React, { useRef, useEffect, useContext } from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport FullWidthTabs from \"../components/Tabs\";\nimport gsap from \"gsap\"\n\nconst Information = () => {\n  const { value5, value6 } = useContext(AppContext);\n  const [openInformation, setOpenInformation] = value5;\n  const [switchChecked, setSwitchChecked] = value6;\n\n  const fadeOut = () => {\n    if (window.innerWidth < 770) {\n      gsap.to(\"#open-info-wrapper\", {y: 400})\n\n      setTimeout(() => {\n        setOpenInformation(false)\n      }, 400)\n\n    } else {\n      setOpenInformation(false)\n    }\n\n  }\n\n  if (openInformation) {\n    return (\n      <ClickAwayListener onClickAway={fadeOut}>\n          <Tween from={{ y: \"500px\" }} to={{ y: \"40%\" }} duration={0.5}>\n            <div\n              id=\"open-info-wrapper\"\n              style={{ backgroundColor: switchChecked ? \"#55BDCA\" : \"grey\" }}\n            >\n              <FullWidthTabs />\n            </div>\n          </Tween>\n      </ClickAwayListener>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Information;\n","import react, { useContext, useState } from \"react\";\nimport gsap from \"gsap\"\nimport { Reveal, Tween } from 'react-gsap';\nimport { AppContext } from \"./AppContext\";\n\nconst Header = () => {\n  const { value6 } = useContext(AppContext);\n  const [switchChecked, setSwitchChecked] = value6;\n  const [showComponent, setShowComponent] = useState(false)\n\n  setTimeout(() => {\n    setShowComponent(true)\n  }, 3000)\n\n  const animate = () => {\n    let tl = gsap.timeline();\n    tl.to(\".header-text\", {y: -5, duration: 0.2})\n      .to(\".header-text\", {y: 5, duration: 0.2})\n  }\n\n  return (\n    <Reveal>\n      <Tween from={{ opacity: 0 }} duration={2}>\n         <div\n          className=\"comic-font header-text\"\n          style={{ color: switchChecked ? \"#022249\" : \"white\", display: showComponent ? \"block\" : \"none\", cursor: \"pointer\" }}\n          onClick={animate}\n        >\n          Sort'ali<span className=\"z\">z</span>e\n        </div>\n      </Tween>\n    </Reveal>\n  );\n};\n\nexport default Header;\n\n","import react, {useState, useEffect, useContext} from \"react\"\nimport gsap from \"gsap\"\nimport { Reveal, Tween } from 'react-gsap';\n\n// Returns a Promise that resolves after \"ms\" Milliseconds\nconst timer = ms => new Promise(res => setTimeout(res, ms))\nlet tl1 = gsap.timeline();\nlet tl2 = gsap.timeline();\n\nconst animateWords = async (sortalize) => {\n    for (let i = 0; i < sortalize.length; i++ ) {\n\n        if(i == 5 ||i == 8) {\n            document.getElementsByClassName(`sortalize-${i}`)[0].style.color = \"orange\"\n            gsap.to(`.sortalize-${i}`, {y: -40})\n        } else {\n            document.getElementsByClassName(`sortalize-${i}`)[0].style.color = \"grey\"\n        }\n        await timer(100);\n    }\n    \n    tl1.to(\".sortalize-5\", {x: 40, ease: \"expo.out\"})\n       .to(\".sortalize-5\", {y: 0, ease: \"expo.out\"})\n\n    tl2.to(\".sortalize-8\", {x: -40, ease: \"expo.out\"})\n       .to(\".sortalize-8\", {y: 0, ease: \"expo.out\"})\n    \n    gsap.to(\".comic-font-intro\", {opacity: 0, delay: 1, duration: .7})\n}\n\nconst IntroSlide = () => {\n    const FadeInLeft = ({ children }) => (\n        <Tween\n          from={{ opacity: 0, transform: 'translate3d(-10vw, 0, 0)' }}\n          ease=\"back.out(1.2)\"\n        >\n          {children}\n        </Tween>\n      );\n\n    let sortalize = ['S', 'o', 'r', 't', \"'\", 'z', 'l', 'i', 'a', 'e']\n\n    useEffect(() => {\n        setTimeout(() => {\n            animateWords(sortalize)\n        }, 1000);\n    }, [])\n\n    return (\n        <div id=\"intro-slider\"> \n            <Reveal repeat trigger={<div />}>\n                <FadeInLeft>\n                    <div className=\"comic-font-intro\">\n                    {sortalize.map((i, idx) => {\n                        return <p key={i} className={`sortalize-${idx} sortalize_chars`}>{i}</p>\n                    })}\n                    </div>\n                </FadeInLeft>\n            </Reveal>\n        </div>\n    )\n \n}\n\nexport default IntroSlide;","import react, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"./AppContext\";\nimport gsap from \"gsap\"\n\n\nconst HoveredValue = () => {\n    const { value10 } = useContext(AppContext);\n    const [hoveredValue, setHoveredValue] = value10;\n\n    gsap.fromTo(\"#hovered-value\", {opacity: 0}, {opacity: 1, duration: 0.5})\n    gsap.fromTo(\"#hovered-value\", {y: 200}, {y: 190, duration: 0.4})\n\n    return (\n        <div id=\"hovered-value\">{hoveredValue}</div>\n    )\n}\n\nexport default HoveredValue;","import {useState, useEffect} from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport gsap from \"gsap\"\n\nexport const IntroMessage = () => {\n    const [showData, setShowData] = useState(false)\n\n    useEffect(() => {\n        setTimeout(() => {\n            setShowData(true)\n            gsap.fromTo(\"#intro-message\", {y: -50, opacity: 0}, {y: 20, opacity: 1})\n        }, 4000)\n    }, [])\n\n    const closeIntro = () => {\n        if (window.innerWidth < 770) {\n            gsap.fromTo(\"#intro-message\", {y: 20}, {y: 200, opacity: 0})\n        } else {\n            gsap.fromTo(\"#intro-message\", {y: 20}, {y: -140, opacity: 0})\n        }\n\n        setTimeout(() => {\n            setShowData(false)\n        }, 1000)\n    }\n\n    const rotateForth = () => {\n        gsap.to(\"#close-intro-message\", {rotate: 90})\n    }\n\n    const rotateBack = () => {\n        gsap.to(\"#close-intro-message\", {rotate:0})\n    }\n\n\n    if (showData) {\n        return (\n            <div id=\"intro-message\">\n                <h1 style={{display: \"inline\"}}>There might be some bugs with ios-devices. Working on it!</h1>\n                <CloseIcon onClick={closeIntro} id=\"close-intro-message\" onMouseEnter={rotateForth} onMouseLeave={rotateBack} />\n            </div>\n        );   \n    } else {\n        return null;\n    }\n}","import Toolbar from \"../src/components/Toolbar\";\nimport MobileToolbar from \"../src/components/MobileToolbar\";\nimport SortingAreaWrapper from \"../src/components/SortingAreaWrapper\";\nimport { ContextProvider } from \"../src/components/AppContext\";\nimport ThemeSwitcher from \"../src/components/ThemeSwitcher\";\nimport Information from \"../src/components/Information\";\nimport Header from \"../src/components/Header\";\nimport IntroSlide from \"./components/Intro\";\nimport HoveredValue from \"./components/HoveredValue\"\nimport {IntroMessage} from \"./components/IntroMessage\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ContextProvider>\n        <IntroMessage />\n        <HoveredValue />\n        <IntroSlide />\n        <Header />\n        <Information />\n        <ThemeSwitcher />\n        <SortingAreaWrapper />\n        <Toolbar />\n        <MobileToolbar />\n      </ContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}